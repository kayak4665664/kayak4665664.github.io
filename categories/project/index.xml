<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Project - Category | kayak4665664</title>
    <link>https://www.kayak4665664.com/categories/project/</link>
    <description>Project - Category | kayak4665664</description>
    <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>contact@kayak4665664.com (kayak4665664)</managingEditor>
      <webMaster>contact@kayak4665664.com (kayak4665664)</webMaster><copyright>kayak4665664 | CC BY-NC-SA 4.0</copyright><lastBuildDate>Thu, 04 Jan 2024 21:51:14 &#43;0800</lastBuildDate><atom:link href="https://www.kayak4665664.com/categories/project/" rel="self" type="application/rss+xml" /><item>
  <title>Node-Depend-View</title>
  <link>https://www.kayak4665664.com/node-depend-view/</link>
  <pubDate>Thu, 04 Jan 2024 21:51:14 &#43;0800</pubDate>
  <author>kayak4665664</author>
  <guid>https://www.kayak4665664.com/node-depend-view/</guid>
  <description><![CDATA[<a href="https://github.com/kayak4665664/Node-Depend-View" title="Node-Depend-View - kayak4665664"target="_blank" rel="external nofollow noopener noreferrer" class="card-link"><span class="cl-backdrop" style="--cl-bg-url: url(/images/fixit.min.svg);"></span>
    <span class="cl-content">
      <span class="cl-text">
        <span class="cl-title">Node-Depend-View</span>
        <span class="cl-meta">
          <svg class="cl-icon-link" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zM832.6 191.4c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1z" fill="#a9a9b3"></path><path d="M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z" fill="#a9a9b3"></path></svg>
          <span class="cl-url">https://github.com/kayak4665664/Node-Depend-View</span>
        </span>
      </span><img src="/images/remote/favicons_10588377690699735476.png" alt="card icon" class="cl-icon-shortcut"></span></a>
<p>I completed this small project while learning frontend and Node.js development. It can display the dependency relationship of a project in graphical form. I also published it to npm. Please see the link above for details. I feel that it is very interesting to do full-stack development with TypeScript, and I hope to find an internship in the new year! Okay, I won&rsquo;t say much, come on! ðŸ’ª</p>]]></description>
</item>
<item>
  <title>Devtools-Font</title>
  <link>https://www.kayak4665664.com/devtools-font/</link>
  <pubDate>Sat, 26 Aug 2023 16:55:24 &#43;0800</pubDate>
  <author>kayak4665664</author>
  <guid>https://www.kayak4665664.com/devtools-font/</guid>
  <description><![CDATA[<p>I suddenly found that the font family in Chrome Devtools cannot be modified directly the day before yesterday. I checked it and found that I can write an extension to solve this problem.</p>
<a href="https://github.com/kayak4665664/Devtools-Font" title="Devtools-Font - kayak4665664"target="_blank" rel="external nofollow noopener noreferrer" class="card-link"><span class="cl-backdrop" style="--cl-bg-url: url(/images/fixit.min.svg);"></span>
    <span class="cl-content">
      <span class="cl-text">
        <span class="cl-title">Devtools-Font</span>
        <span class="cl-meta">
          <svg class="cl-icon-link" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zM832.6 191.4c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1z" fill="#a9a9b3"></path><path d="M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z" fill="#a9a9b3"></path></svg>
          <span class="cl-url">https://github.com/kayak4665664/Devtools-Font</span>
        </span>
      </span><img src="/images/remote/favicons_10588377690699735476.png" alt="card icon" class="cl-icon-shortcut"></span></a>
<p>I mainly refer to <a href="https://gist.github.com/vbsessa/e337d0add70a71861b8c580d5e16996e"target="_blank" rel="external nofollow noopener noreferrer">https://gist.github.com/vbsessa/e337d0add70a71861b8c580d5e16996e<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>, but the font in &ldquo;Sources&rdquo; does not change according to this tutorial. I made some modifications based on this. Finally, I changed the font to <code>FiraCode Nerd Font</code>. I have to say that this font is really good-looking, and there is a ligature effect.</p>]]></description>
</item>
<item>
  <title>Springboot-Demo</title>
  <link>https://www.kayak4665664.com/springboot-demo/</link>
  <pubDate>Sun, 11 Jun 2023 16:55:12 &#43;0800</pubDate>
  <author>kayak4665664</author>
  <guid>https://www.kayak4665664.com/springboot-demo/</guid>
  <description><![CDATA[<p>I chose a Java programming course this semester, and finally completed a project, which is <strong>Springboot-Demo</strong>.</p>
<a href="https://github.com/kayak4665664/Springboot-Demo" title="Springboot-Demo - kayak4665664"target="_blank" rel="external nofollow noopener noreferrer" class="card-link"><span class="cl-backdrop" style="--cl-bg-url: url(/images/fixit.min.svg);"></span>
    <span class="cl-content">
      <span class="cl-text">
        <span class="cl-title">Springboot-Demo</span>
        <span class="cl-meta">
          <svg class="cl-icon-link" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zM832.6 191.4c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1z" fill="#a9a9b3"></path><path d="M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z" fill="#a9a9b3"></path></svg>
          <span class="cl-url">https://github.com/kayak4665664/Springboot-Demo</span>
        </span>
      </span><img src="/images/remote/favicons_10588377690699735476.png" alt="card icon" class="cl-icon-shortcut"></span></a>
<p>The function of this program is to read data from the <code>json</code> file and then display it on the page. In addition to the <code>Springboot</code> framework, the front end is still my commonly used <code>Layui</code> and <code>Highcharts</code>.</p>
<p>I chose this Java course mainly to practice Java&rsquo;s Web development. I remember when I was a junior, there was a software engineering practice course, and one of the experiments was to make a Web application. At that time, I first came into contact with Web development. I wanted to use Java and <code>Springboot</code> to complete it. I found some tutorials on the Internet and felt a little unclear. Then I learned about the <code>Django</code> framework of python, and found it easier to understand. Finally, I used <code>Django</code> to do that experiment. This time I used <code>Springboot</code>, and I feel that it is not much different from <code>Django</code>.</p>]]></description>
</item>
<item>
  <title>Pcap-Parser</title>
  <link>https://www.kayak4665664.com/pcap-parser/</link>
  <pubDate>Tue, 11 Apr 2023 12:59:01 &#43;0800</pubDate>
  <author>kayak4665664</author>
  <guid>https://www.kayak4665664.com/pcap-parser/</guid>
  <description><![CDATA[<p><a href="https://www.kayak4665664.com/capture-packets-for-mobile-apps/"target="_blank" rel="external nofollow noopener noreferrer">Previous article<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a> introduces how to capture packets, and this article introduces how to write a program to parse the captured packet files.</p>
<div class="details admonition info open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content">The source code involved in this article is in the GitHub repository:</div>
    </div>
  </div>
<a href="https://github.com/kayak4665664/Pcap-Parser" title="Pcap Parser - kayak4665664"target="_blank" rel="external nofollow noopener noreferrer" class="card-link"><span class="cl-backdrop" style="--cl-bg-url: url(/images/fixit.min.svg);"></span>
    <span class="cl-content">
      <span class="cl-text">
        <span class="cl-title">Pcap-Parser</span>
        <span class="cl-meta">
          <svg class="cl-icon-link" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zM832.6 191.4c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1z" fill="#a9a9b3"></path><path d="M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z" fill="#a9a9b3"></path></svg>
          <span class="cl-url">https://github.com/kayak4665664/Pcap-Parser</span>
        </span>
      </span><img src="/images/remote/favicons_10588377690699735476.png" alt="card icon" class="cl-icon-shortcut"></span></a>
<p>The Pcap file contains the information of the network data packet, including source IP address, destination IP address, source port, destination port, transport layer protocol, application layer protocol, etc. Therefore, the idea of the program is to parse from the data link layer to the application layer and parse out the protocol type and protocol data of each layer. In terms of implementation, you can refer to the analysis results of Wireshark.</p>
<p>For <code>C/C++</code>, <code>&lt;pcap.h&gt;</code> can be used to process Pcap files. Afterward, use <code>&lt;net/ethernet.h&gt;</code>, <code>&lt;netinet/ip.h&gt;</code>, <code>&lt;netinet/tcp.h&gt;</code> defined the Ethernet header, IP header, and TCP header structure to parse the data Link layer, network layer, and transport layer. In addition, both the IP header and the TCP header have <code>options</code>, which is not in the structure.</p>
<p>There are many types of protocols in the application layer, and programs need to be written for each protocol. <a href="https://github.com/kayak4665664/Pcap-Parser"target="_blank" rel="external nofollow noopener noreferrer">My program<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a> supports parsing <code>HTTP</code> and <code>TLS</code> protocols.</p>
<p><code>HTTP</code> is a plain text protocol, and the data fields are separated by <code>\r\n</code>. In addition, it is necessary to consider that an <code>HTTP</code> message is divided into several packets, and the correct result can only be parsed after reassembling the relevant packets. And <code>TLS</code> is an encryption protocol, which is more complicated. It needs to be parsed according to the structure of the protocol, and reassembling should also be considered.</p>
<p>The above are just some simple ideas. There are many complicated situations that have not been covered.</p>]]></description>
</item>
<item>
  <title>NCUT-Pot</title>
  <link>https://www.kayak4665664.com/ncut-pot/</link>
  <pubDate>Thu, 14 Jul 2022 13:07:57 &#43;0800</pubDate>
  <author>kayak4665664</author>
  <guid>https://www.kayak4665664.com/ncut-pot/</guid>
  <description><![CDATA[<p><strong>NCUT-Pot</strong> is my graduation project, it&rsquo;s a honeypot.</p>
<p>This honeypot supports <code>Telnet</code> and <code>SSH</code> two protocols, simulates the <code>Linux</code> system, and stores hackers&rsquo; data in the <code>SQL</code> database. In addition, it also sends alerts to users via SMS and email. Users can customize commands and directories.</p>
<div class="details admonition info open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-info-circle fa-fw" aria-hidden="true"></i>Info<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content">For more details about <strong>NCUT-Pot</strong> please visit <a href="https://github.com/kayak4665664/NCUT-Pot"target="_blank" rel="external nofollow noopener noreferrer">https://github.com/kayak4665664/FF-Pot<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>(now renamed FF-Pot).</div>
    </div>
  </div>]]></description>
</item>
</channel>
</rss>
