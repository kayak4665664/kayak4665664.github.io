[{"categories":["笔记"],"content":"通过调整Launchpad每一行和每一列的图标的数量，就可以调整图标的大小。 ","date":"2023-02-21","objectID":"/zh-cn/modify-the-icons-size-in-macos-launchpad/:0:0","tags":["macOS"],"title":"修改macOS Launchpad的图标大小","uri":"/zh-cn/modify-the-icons-size-in-macos-launchpad/"},{"categories":["笔记"],"content":"方法 在Terminal中执行以下命令： # 例如设置为8列 defaults write com.apple.dock springboard-columns -int 8 # 例如设置为6行 defaults write com.apple.dock springboard-rows -int 6 # 重置Launchpad defaults write com.apple.dock ResetLaunchPad -bool TRUE # 重启Dock killall Dock 恢复默认设置： defaults write com.apple.dock springboard-rows Default defaults write com.apple.dock springboard-columns Default defaults write com.apple.dock ResetLaunchPad -bool TRUE killall Dock ","date":"2023-02-21","objectID":"/zh-cn/modify-the-icons-size-in-macos-launchpad/:1:0","tags":["macOS"],"title":"修改macOS Launchpad的图标大小","uri":"/zh-cn/modify-the-icons-size-in-macos-launchpad/"},{"categories":["笔记"],"content":"Depay的注册和下载链接：https://depay.depay.one/web-app/register-h5?invitCode=606096\u0026lang=zh-cn，推荐码：606096。 我找到了Depay老板在v2ex上发的主题，本文的内容主要根据这个主题以及我自己的体验。 ","date":"2023-02-18","objectID":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/:0:0","tags":["境外支付"],"title":"Depay: 使用USDT消费的虚拟美元信用卡","uri":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/"},{"categories":["笔记"],"content":"Depay可以做什么 通过Depay可以直接用USDT充值，兑换成美元，然后用VISA和mastercard消费。 可以绑定支付宝、微信支付、美团外卖、拼多多、Paypal(国区、美区、港区)、天猫国际版等 支持Stripe商户、Google Play、Youtube Premium 、Paypal商户、美区App Store和支持非3DS卡的电商网站 支持免KYC开卡，实现完全匿名付款 ","date":"2023-02-18","objectID":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/:1:0","tags":["境外支付"],"title":"Depay: 使用USDT消费的虚拟美元信用卡","uri":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/"},{"categories":["笔记"],"content":"注册和下载 Depay的注册和下载链接：https://depay.depay.one/web-app/register-h5?invitCode=606096\u0026lang=zh-cn，推荐码：606096。 或者用手机扫描下方海报上的二维码： 安卓直接下载APK安装；iOS可以在非中国区下载，也可以下载测试版。 ","date":"2023-02-18","objectID":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/:2:0","tags":["境外支付"],"title":"Depay: 使用USDT消费的虚拟美元信用卡","uri":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/"},{"categories":["笔记"],"content":"申请虚拟卡 进入Depay App后，点击申请卡，一开始可以选择标准卡和Lite卡，Lite卡不需要KYC。现在一共有5种卡（Lite、标准、高级、白金、黑金），区别主要在于开卡费、月费和充值手续费不同，标准卡的开卡费是0，具体的区别可以看官网。 ","date":"2023-02-18","objectID":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/:3:0","tags":["境外支付"],"title":"Depay: 使用USDT消费的虚拟美元信用卡","uri":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/"},{"categories":["笔记"],"content":"充币、兑换美元、充值和激活 Depay目前支持充USDT(TRC20)，一次至少5USDT。充币之后可以将USDT实时兑换成美元。激活虚拟卡需要往卡里充值美元，充值会有一定比例的手续费，标准卡的手续费每次最少1美元，所以不要频繁地小额充值。 激活之后就可以查看卡号和CVV安全码了。 ","date":"2023-02-18","objectID":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/:4:0","tags":["境外支付"],"title":"Depay: 使用USDT消费的虚拟美元信用卡","uri":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/"},{"categories":["笔记"],"content":"黑金卡 目前只要邀请20个人开卡，可以找管理员升级黑金卡。黑金卡没有月费，充值手续费也比较低。 ","date":"2023-02-18","objectID":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/:5:0","tags":["境外支付"],"title":"Depay: 使用USDT消费的虚拟美元信用卡","uri":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/"},{"categories":["笔记"],"content":"Depay是否安全？ Depay是一个刚成立的英国小公司，不放心的话最好不要充太多的钱，够用就行。 ","date":"2023-02-18","objectID":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/:6:0","tags":["境外支付"],"title":"Depay: 使用USDT消费的虚拟美元信用卡","uri":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/"},{"categories":["笔记"],"content":"客服 官网：https://depay.one/ 邮箱：support@depay.one Telegram群：https://t.me/depay_visa Twitter：https://twitter.com/Depay_CN ","date":"2023-02-18","objectID":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/:7:0","tags":["境外支付"],"title":"Depay: 使用USDT消费的虚拟美元信用卡","uri":"/zh-cn/depay-a-virtual-dollar-credit-card-for-spending-with-usdt/"},{"categories":["笔记"],"content":"自从2月11日加入了waitlist，今天终于收到邮件，我可以使用新Bing了。 迫不及待地打开了Edge Dev，进入CHAT，但是我很快就发现无法在输入框里正常地输入所有的字符。我又在Safari上试了试，发现完全正常，所以很可能是Edge Dev存在一些问题。 之后和新Bing进行了几轮对话，感觉它似乎有点缺少对话的积极性，经常会让我换个话题。而且，没几分钟就出现了“This has been lovely, but you’ve reached your daily limit. Chat again tomorrow?”的提示。 不得不说，新Bing一个很有用的功能是它可以从我们正在阅读的网页和文件中获取信息。我测试了一下，我用Edge Dev打开了一个本地的PDF文件，点击Discover按钮进行Chat，新Bing可以总结这个文件中的要点。另外，它也可以在Discover中很方便地生成一些文字。 根据我的体验，我认为新Bing还是很不错的，非常期待之后的正式版本。 ","date":"2023-02-18","objectID":"/zh-cn/you-re-in-welcome-to-the-new-bing/:0:0","tags":["Bing","浏览器"],"title":"新Bing体验","uri":"/zh-cn/you-re-in-welcome-to-the-new-bing/"},{"categories":["日记"],"content":"美味的奶油水果蛋糕！ 在去年两个蛋糕的基础上，这一次主要加入了奶油和水果，还放了几个奥利奥，味道更有层次感了。唯一的缺点是蛋糕胚不够香甜松软，吃着有点像馒头😂 ","date":"2023-02-15","objectID":"/zh-cn/creamy-fruit-cakean-upgraded-version/:0:0","tags":["蛋糕"],"title":"奶油水果蛋糕——升级版🍰","uri":"/zh-cn/creamy-fruit-cakean-upgraded-version/"},{"categories":["笔记"],"content":"Visited Lite是一个自定义已访问链接的颜色的userscript，而Color Links是具有相似功能的浏览器扩展。 前几天微软公司推出了结合GPT技术的新版Bing和Edge浏览器，我看了网上对它们的介绍，感觉真的很不错。而且去年我也第一时间体验了ChatGPT，所以这一次我非常期待新版Bing和Edge，申请加入了waitlist。 在使用Bing的过程中，我忽然发现了一个问题，在Bing的搜索结果中，已访问的链接和未访问的链接都是紫色的，这样就很难区分哪些链接是已访问的，哪些链接是未访问的。而我之前一直使用Google，未访问的链接是蓝色的，访问过的链接是紫色的。我在Bing的设置中并没有找到相关的设置项，不知道问题出在了哪里，所以我想寻找一些userscript或者浏览器扩展来解决这个问题。 ","date":"2023-02-13","objectID":"/zh-cn/visited-lite-script-that-mark-all-visited-links-as-custom-color/:0:0","tags":["Bing","浏览器","Userscripts","Chrome扩展"],"title":"Visited Lite \u0026 Color Links: 自定义已访问链接的颜色","uri":"/zh-cn/visited-lite-script-that-mark-all-visited-links-as-custom-color/"},{"categories":["笔记"],"content":"Visited Lite 于是我找到了Visited Lite，它可以自定义所有网站的已访问链接的颜色，而不仅仅是Bing的。我在Edge的Tampermonkey扩展中安装了这个userscript，Visited Lite用醒目的颜色标记了所有已访问的链接。不过有的网页可能并不需要这个功能，可以在Tampermonkey扩展中排除它们。 ","date":"2023-02-13","objectID":"/zh-cn/visited-lite-script-that-mark-all-visited-links-as-custom-color/:1:0","tags":["Bing","浏览器","Userscripts","Chrome扩展"],"title":"Visited Lite \u0026 Color Links: 自定义已访问链接的颜色","uri":"/zh-cn/visited-lite-script-that-mark-all-visited-links-as-custom-color/"},{"categories":["笔记"],"content":"Color Links 之后，我又在chrome web store中找到了Color Links。与Visited Lite的不同主要在于，Color Links需要为每一个网站手动开启标记颜色的功能。 ","date":"2023-02-13","objectID":"/zh-cn/visited-lite-script-that-mark-all-visited-links-as-custom-color/:2:0","tags":["Bing","浏览器","Userscripts","Chrome扩展"],"title":"Visited Lite \u0026 Color Links: 自定义已访问链接的颜色","uri":"/zh-cn/visited-lite-script-that-mark-all-visited-links-as-custom-color/"},{"categories":["笔记"],"content":"昨天用了一下texliveonfly宏包，直接出现了env: python: No Such File or Directory。 我试着执行了一下python，结果弹出了一个Xcode Command Line Tools的提示，说要下载一些东西，然后它下载了Python3.9，而我之前已经有了Python3.8🙃。 我试着用ln建立软连接，但是没有用。 我想既然texliveonfly是用Python写的，我可以直接编辑它。于是我找到了/Library/TeX/texbin/texliveonfly，然后将这个文件第一行的#!/usr/bin/env python改成了#!/usr/bin/env python3，这样就解决了。 ","date":"2023-01-23","objectID":"/zh-cn/texliveonfly-env-python-no-such-file-or-directory/:0:0","tags":["LaTeX","Python","macOS"],"title":"texliveonfly, env: python: No Such File or Directory","uri":"/zh-cn/texliveonfly-env-python-no-such-file-or-directory/"},{"categories":["笔记"],"content":"LeetCode 66.Plus One，一道简单的题。主要是想练习一下Java，好长时间没写Java了。 我的思路是从后往前遍历，如果当前位是9，那么就进位，如果不是9，那么就加1，然后返回结果。如果最后一位是9，那么就需要在最前面加一个1，这个时候就需要新建一个数组，然后把原来的数组复制过去。 class Solution { public int[] plusOne(int[] digits) { int end = digits.length - 1; int[] result = new int[end + 1]; boolean carry = false; result[end] = digits[end] + 1; if (result[end] == 10) { result[end] = 0; carry = true; } for (int i = end - 1; i \u003e= 0; --i) { result[i] = digits[i]; if (carry) { result[i] += 1; if (result[i] == 10) { result[i] = 0; carry = true; } else { carry = false; } } } if (carry) { int[] tmp = result; result = new int[end + 2]; result[0] = 1; for (int i = 1; i \u003c end + 2; ++i) { result[i] = tmp[i - 1]; } } return result; } } ","date":"2023-01-22","objectID":"/zh-cn/leetcode-66/:0:0","tags":["算法","Java","LeetCode"],"title":"LeetCode 66","uri":"/zh-cn/leetcode-66/"},{"categories":["笔记"],"content":"今天我爸爸开车送我到一个地方，我下车之后走了3分钟，忽然发现我的手机不见了…… 我赶紧返回原路找我的手机，但是没有找到。最后和路边的交警同志借了手机给我爸爸打了一个电话，才确认我的手机落在了车里。 虽然在Find My中已经设置了离开iPhone时在Apple Watch上发出通知，但是似乎这个功能需要在一个比较远的距离才能生效。 所以我就找到了Phone Buddy，售价$4.99，我用支付宝购买美区App Store礼品卡的方法充值购买了这个App。 下载Phone Buddy之后，在Apple Watch上开启Lost Phone Alert，当Apple Watch断开了和iPhone之间的蓝牙连接时就会在Apple Watch上发出警报。并且还可以有基于距离的Distance Alert，当Apple Watch和iPhone之间的蓝牙信号强度随着距离的增加衰减到设定的阈值以下时也可以发出警报，这样可以在完全断开蓝牙连接之前多一次警报。同样的，还可以设置在Apple Watch断开连接后在iPhone上发出警报，可以防止丢失或遗忘Apple Watch。 唯一不足的是，这个App会缩短Apple Watch的续航时间，不过比起丢失了iPhone，这个代价是可以接受的。 ","date":"2023-01-18","objectID":"/zh-cn/use-phone-buddy-on-apple-watch-to-prevent-forgotten-iphone/:0:0","tags":["Apple Watch","iPhone"],"title":"在Apple Watch上使用Phone Buddy防止忘带iPhone","uri":"/zh-cn/use-phone-buddy-on-apple-watch-to-prevent-forgotten-iphone/"},{"categories":["日记"],"content":"在国科大的第一个学期很快就过去了，感觉这个学期的经历很丰富。 我于2022年8月17日到达了北京市怀柔区怀北镇，当天下午我先去参观了一下雁栖湖 。雁栖湖是一个很大的湖，湖边有很多树🌳，湖上有很多船🛶，湖边有很多人。湖边的山上还有一条不知道通向哪里的步道，我在这条路上走了很久，感觉很好，可惜由于施工道路中断了🚧，后来我才知道这条路和国科大的观景台是连通的。我在湖边的山上看到了很多鸟🐦，它们在湖上飞在湖边的树上叫。 在雁栖湖旁边村里的农家乐住了一晚上后，我第二天一早就前往了国科大。虽然那天下了一整天雨🌧️，我的衣服和鞋子都湿透了，但是刚到学校，感觉一切都是那么新鲜，心情还是很不错的🙂。 伴随着两天一次的核酸，这个学期就这样开始了。国科大的课程的质量和难度确实要比北方工大的高，感觉收获也要更多一些。除了上课，我也经常在学校里骑着自行车🚲转一转，看看校园的景色。因为学校背靠着大山和雁栖湖，所以学校的生态环境很不错，经常有小动物🐱出没，据说还有野猪🐗和蛇🐍这样的猛兽。 不得不说，国科大在山上种了好多果树，秋天丰收之后，我们吃到了不少免费的水果。 到了11月底，学校变得不是那么平静。由于进入冬季奥密克戎疫情又变得严重，当时北京许多高校都开始安排学生返乡。刚开始国科大还是要求学生必须在校完成所有考试，后来在11月29日终于允许学生返乡。一时间各种小道消息在学校传播：有人说学校里有一名核酸检测呈阳性的学生，所有学生都不能回家了，可能都要隔离在宿舍里；有人说出校之后进入北京市区，在火车站等一些地方会有人搜查手机……有点人心惶惶的感觉。 由于我家所在的城市正在封城，不知道什么时候才结束，所以我决定继续留在学校。据说如果校园内出现了疫情，可能食堂就没办法正常做饭了，我就赶紧囤了一些食物。那时好多快递都中断了，京东快递也变得很慢。 在那几天，大部分学生都离开学校回家了，学校安静了下来。在12月5日前后，防疫政策突然出现了重大变化，终于结束了两天一次的核酸检测。但是这时学校开始出现了感染者，我也准备了2盒复方氨酚烷胺胶囊。 12月19日早晨起床后，我感觉我的嗓子变干了还有点疼，还有很多鼻涕，我应该是感染了。当天晚上，我的运动手环一直警告我的心脏🫀跳得很快，在120BMP左右，我静静坐着可以听到心跳的声音。我非常害怕，躺到了床上，浑身发热，心率还是降不下来。伴随着我的心跳声，后来我终于睡着了。第二天早上查看记录，心率慢慢降到了90BMP左右，这很不正常。 我也不知道这是怎么了，自2019年出现新冠病毒以来，我一直不知道新冠病毒会对心脏造成影响。我在网上搜索了一下，也有很多人遇到了和我相同的情况，据说这是病毒性心肌炎。于是我赶紧下单了辅酶$Q_{10}$胶囊。 12月22日，我去领取了一个抗原检测试剂，我确实感染新冠病毒🦠了。 过了一周，我的症状逐渐消失了，只是还是有一些咳嗽，而且心率还是偏快。12月27日，我又领取了一份抗原检测试剂，这一次是阴性。 又过了一个多星期，我完成了所有的考试，我的心率还是不正常，我决定去怀柔医院检查一下。我做了心脏彩超、胸部CT扫描以及多项血液检测，检测结果并没有出现什么异常，医生说我的情况应该是新冠后遗症而不是心肌炎，需要通过一个较长的时间来慢慢恢复。 现在已经是2023了，只希望能够尽快恢复疫情前的生活🙏。 ","date":"2023-01-17","objectID":"/zh-cn/first-semester-at-ucas/:0:0","tags":["转悠","UCAS"],"title":"在国科大的第一个学期","uri":"/zh-cn/first-semester-at-ucas/"},{"categories":["笔记"],"content":"只要5分钟，把微信公众号变成机器人🤖。 之前注册了一个微信公众号，但是一直闲置着，于是我就想把它变成机器人，发挥一点点作用。 ","date":"2022-11-16","objectID":"/zh-cn/turn-idle-wechat-official-account-into-a-robot/:0:0","tags":["微信"],"title":"把闲置微信公众号变成机器人","uri":"/zh-cn/turn-idle-wechat-official-account-into-a-robot/"},{"categories":["笔记"],"content":"方法 用微信扫码登录微信对话开放平台 在机器人创建页面设置机器人的名称，完成机器人创建 根据需要开启机器人的“预置技能”，比如英语翻译、天气、股票、新闻、笑话等 在“应用绑定”中绑定微信公众号 在“上线发布”中发布 是不是很简单呢？ ","date":"2022-11-16","objectID":"/zh-cn/turn-idle-wechat-official-account-into-a-robot/:1:0","tags":["微信"],"title":"把闲置微信公众号变成机器人","uri":"/zh-cn/turn-idle-wechat-official-account-into-a-robot/"},{"categories":["笔记"],"content":"由于笔记本电脑使用锂电池，长期连接电源使用会导致电量始终处于一个较高的百分比，这样会缩短电池的寿命。因此，让电量保持在20%至80%之间能够延缓电池的衰减。 对于MacBook，我找到了一个软件可以解决这个问题——AlDente。 可以在Github中直接下载，也可以使用Homebrew，brew install --cask aldente。 启动AlDente后这个软件出现在菜单栏中，可以很简单地控制MacBook的最大充电百分比。之后就可以观察到已经连接电源，但是电池没有在充电。 ","date":"2022-10-11","objectID":"/zh-cn/aldente-limit-macbook-maximum-charging-percentage/:0:0","tags":["macOS"],"title":"AlDente：限制MacBook最大充电百分比","uri":"/zh-cn/aldente-limit-macbook-maximum-charging-percentage/"},{"categories":["笔记"],"content":"总有一些软件的图标和macOS的不适应，iconsur可以为它们生成圆角矩形的图标，美化我们的macOS。 iconsur的Github主页：https://github.com/rikumi/iconsur，可以在Releases中下载。也可以用Homebrew：brew install iconsur，或者是npm：npm install -g iconsur。 iconsur在App Store中为软件寻找最相似的iOS app，把这个软件的图标替换成iOS app的图标。例如： sudo iconsur set /Applications/Microsoft\\ Word.app/ 另外，iconsur也可以为软件在本地生成图标。例如： sudo iconsur set /Applications/Visual\\ Studio\\ Code.app/ -l 其他用法可以参照Github或是执行iconsur help。 ","date":"2022-09-17","objectID":"/zh-cn/iconsur-generate-rounded-rectangle-icons-for-macos-third-party-software/:0:0","tags":["macOS"],"title":"iconsur：为macOS第三方软件生成圆角矩形图标","uri":"/zh-cn/iconsur-generate-rounded-rectangle-icons-for-macos-third-party-software/"},{"categories":["日记"],"content":"经过了半个多月的训练，顺利拿到驾照！感谢每一位教练的耐心指导！ 我还在驾校转了转，驾校建在一个山头上，视野很开阔。 驾校竟然还养了几只小马。 ","date":"2022-08-13","objectID":"/zh-cn/i-got-my-driving-license/:0:0","tags":["转悠"],"title":"拿到驾照了🚘","uri":"/zh-cn/i-got-my-driving-license/"},{"categories":["项目"],"content":"NCUT-Pot是我的毕业设计，是一个蜜罐。 这个蜜罐支持Telnet和SSH两种协议，模拟Linux系统，将黑客的数据存储在SQL数据库中。此外，它还通过短信和电子邮件向用户发送警报。用户可以自定义蜜罐的命令和目录。 关于NCUT-Pot的更多细节请访问https://github.com/kayak4665664/FF-Pot（现已改名为FF-Pot）。 ","date":"2022-07-14","objectID":"/zh-cn/ncut-pot/:0:0","tags":["毕业设计","NCUT"],"title":"NCUT-Pot","uri":"/zh-cn/ncut-pot/"},{"categories":["日记"],"content":"自从毕设结束了，我就天天盼着录取通知书，终于等到了！ 哈哈，校园卡也到了。虽然我非常期待国科大的新学期，不过8月18日就得去报到，我又要去驾校学车，感觉我的假期还没有开始就要结束了🥹 我的毕业证和学位证也回来了，怀念在北方工大那些快乐的日子。 ","date":"2022-07-13","objectID":"/zh-cn/august-18-a-new-beginning/:0:0","tags":["NCUT","UCAS"],"title":"8月18日，新的开始","uri":"/zh-cn/august-18-a-new-beginning/"},{"categories":["日记"],"content":"毕业设计终于要进入尾声了，6月9日下午最终答辩！ 现在我已经完成了毕业设计的大部分工作，所以这两个星期过得还是比较轻松的。但是我现在被隔离了，每天只能呆在屋子里🙃，今天是第4天了。 5月27日中午，我和往常一样去食堂吃了午餐，刚回到宿舍，突然就收到了学校要求毕业生尽快离校的通知。我马上就意识到，这将是我在北方工业大学最后的几天了。 我冷静了一下，立刻开始计划离校前必须做的事情。首先要考虑的就是我的行李，还好学校承诺是可以免费邮寄的，不然邮寄那么多东西的费用我是有点负担不起的。然而，我并没有用来打包的纸箱子。我问了问辅导员，他只说晚些时候会发放。我感觉他的回答太模糊了，我决定自己先去买几个纸箱子。我去学校快递点找到了那里的老板，他告诉我，我们学院之前找他拿了一百多个纸箱子。我估计了一下，一个学生应该只能领取到1个纸箱子。所以，我和老板买了4个大纸箱子，花了45元。 有了纸箱子，我就回宿舍打包行李了。同时，我还得和我家所在的社区报备。我和社区的工作人员联系了一下，她告诉我，我将会被集中隔离7天，再居家隔离7天。我感觉这并不合理，我在学校期间接受了几十次核酸检测，从来都是阴性的，而且学校一直是封闭的，校外的人进不来，校内的人出不去，我认为我不应该被集中隔离7天。而且据我所知，有一些地方对于从北京返回的学生也是不需要集中隔离的。我向她解释了一下，但是没有用。好在集中隔离是免费的，否则又得花不少钱了。那几天，我看到有新闻说有些大学生返乡后被集中隔离，一天要500元。 打包完行李后，我感觉有点热，我发现我的头发有点长了。一想到我马上还要隔离半个月，我就去理发店把头发剪短了。 晚上，辅导员终于通知可以去领纸箱了，我领到1个纸箱和1个麻袋。再加上我买的4个大纸箱，刚刚好。 5月28日上午，我去超市买了一只记号笔，我得在箱子上标记我的邮寄地址。我走进宿舍楼，和我比较熟的一个宿管阿姨告诉我，现在可以开始到快递点邮寄行李了，让我赶紧去吧。考虑到我要把4个纸箱和1个麻袋从宿舍搬到快递点，单靠两只手是不太容易的，所以我到快递点和老板借了一个平板车。我回到宿舍把这5件东西都标记了我的信息，全放到平板车上去了，一下子都运到了快递点。 由于学校要求毕业生离校的通知比较仓促，快递点老板坦白说他们也不知道怎么处理这么多人的行李，而整个快递点只有2个人。当我推着平板车过去时，我看到快递点外面已经堆了不少箱子了。我有点担心这么多箱子最后会被搞混，所以我请求老板先给我的行李贴上快递单，这样我也方便查快递。等我处理好行李，已经12点多了，到了食堂，煮了一大盘饺子。不得不说，食堂的饺子真的太好吃了，里面肉是真的多。 晚上，我查到我的快递已经发出去了，感觉效率还是很高的。 5月29日下午，快递点老板突然给我打电话。我担心的事情发生了，老板说他们打错了快递单，把别人的一箱行李邮寄到我的地址去了，我的一箱还在他那里😱。我赶紧又跑到了快递点，我的一个箱子果然还躺在货架子上。 5月30日，这一天没有什么特别的事情，都已经处理好了。 5月31日，闹钟还没响我就已经醒了，这是我在学校的最后一天。起床吃早餐。之后，开始打包铺盖，收拾行李，我得带足生活用品，晚上就要开始隔离了。我把铺盖打包进了学院发的小纸箱里，刚好能装进去。我抱着箱子到了快递点，门开着却没有人。等了半小时老板终于来了。 中午，到食堂吃午餐，这是我在学校的最后一顿饭。 我回到了宿舍，躺在了床垫上。这个床垫太大不能邮寄，就留在这里了。 下午快3点时，我整理好了行李箱，关上了宿舍的窗户，拉下电闸，最后看了宿舍一眼，锁上了门。我下楼找到宿管阿姨，退了钥匙。 就这样，我就离开了学校，可能永远不会回去了。 上面这张照片是31日的。30日下午我就看见有人在摆弄这几个牌子，不过当时上面还是2021😂。 出了学校，我坐上了地铁去火车站。 晚上8点，火车到站了。很快，开始核查旅客的出发地，我从北京出发，需要被送到隔离酒店。 我填写了一个文件后，我的身份证就被扣押了。他们说会还给我的。我不知道他们是什么人，我认为他们这种行为是违反《中华人民共和国居民身份证法》的。之后就是漫长的等待，活生生站了2个多小时，没有人来处理。总的来说，这是一段不愉快的经历。 晚上10点多，终于有人来接应了，终于把身份证还给我了。之后进行了一次核酸检测。 一行人坐上了车，11点左右终于到达了隔离酒店。又是漫长的等待，我已经很困了，浑身疲劳。再一次核酸检测后，我终于进入了房间。整理好之后，已经将近6月1日的1点了。 有一说一，隔离酒店的环境还是不错的，吃饭喝水也能保证，这4天来我过得还可以。 还有3天集中隔离就要结束了，开始7天的居家隔离，其中6月9日我将进行毕设的答辩。 时间过得太快了，我在3月15日回到学校时，北京还在下雪。一转眼，我突然又回家了。我的4年大学生活马上也要结束了，我会永远记得在北方工业大学的4年。 ","date":"2022-06-04","objectID":"/zh-cn/next-week-i-will-have-my-graduation-project-defense/:0:0","tags":["毕业设计","NCUT"],"title":"下周毕设答辩","uri":"/zh-cn/next-week-i-will-have-my-graduation-project-defense/"},{"categories":["笔记"],"content":"今天知道了一种直接用支付宝购买美区App Store礼品卡的方法，以后不用再去淘宝和闲鱼上买了！ ","date":"2022-05-21","objectID":"/zh-cn/buy-us-app-store-gift-cards-with-alipay/:0:0","tags":["境外支付"],"title":"用支付宝购买美区App Store礼品卡","uri":"/zh-cn/buy-us-app-store-gift-cards-with-alipay/"},{"categories":["笔记"],"content":"方法 打开支付宝 首页左上角切换定位到旧金山 搜索“出境”，在搜索结果中选择“出境” 选择“折扣礼卡” 滑到页面最下方，点击“更多大牌折扣礼卡” 搜索“App Store” 输入正确的邮箱账号 输入要购买的数值，至少$2，“Purchase card” ","date":"2022-05-21","objectID":"/zh-cn/buy-us-app-store-gift-cards-with-alipay/:1:0","tags":["境外支付"],"title":"用支付宝购买美区App Store礼品卡","uri":"/zh-cn/buy-us-app-store-gift-cards-with-alipay/"},{"categories":["日记"],"content":"全世界无产者，联合起来！ 共同捍卫劳动者的权利，为一个更公平更美好的世界而奋斗。 ","date":"2022-04-30","objectID":"/zh-cn/international-workers-day/:0:0","tags":[],"title":"庆祝五一国际劳动节","uri":"/zh-cn/international-workers-day/"},{"categories":["日记"],"content":"今天通过腾讯会议参加了开题答辩。 原计划下午一点半开始，不知道为啥等到了两点😶。今天下午这一场一共有24名学生，3位评委老师。我排在第12号，等到了四点终于轮到我了。总体还是比较顺利的，不过有一位老师正好是研究计算机网络的，而我的课题涉及到了不少网络的东西，被抓着问了几个问题。 答辩之后，老师没说可以退出，正好继续待在会议里面看别人答辩。一位保研到计算所的未透露名字的同学，他的毕设是和华为公司合作的，他说他的毕设成果要打败他导师之前的工作，他立志也要投一篇顶会👍。 这样优秀的同学激励我去做好我自己的工作，继续努力吧👍。 ","date":"2022-03-09","objectID":"/zh-cn/todays-thesis-proposal/:0:0","tags":["毕业设计","NCUT"],"title":"今日开题答辩","uri":"/zh-cn/todays-thesis-proposal/"},{"categories":["日记"],"content":"感觉面粉放少了，没上次的好吃，还不错吧。 ","date":"2022-03-04","objectID":"/zh-cn/made-a-cake-again/:0:0","tags":["蛋糕"],"title":"又做了个蛋糕🍰","uri":"/zh-cn/made-a-cake-again/"},{"categories":["笔记"],"content":"LeetCode 42.Trapping Rain Water，一道挺有意思的题。 给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。 示例： 输入：height = [0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1] 输出：6 解释：上面是由数组 [0, 1, 0, 2, 1, 0, 1, 3, 2, 1, 2, 1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。 刚开始想用stack做，不过感觉不太好。然后我就直接上下一层一层算，但是Time Limit Exceeded了： class Solution { public: int trap(vector\u003cint\u003e\u0026 height) { int ans = 0; unordered_map\u003cint, vector\u003cint\u003e\u003e index; for (int i = 0; i \u003c height.size(); ++i) { for (int j = 1; j \u003c= height[i]; ++j) index[j].push_back(i); } for (auto p : index) { auto v = p.second; for (int i = 1; i \u003c v.size(); ++i) ans += v[i] - v[i - 1] - 1; } return ans; } }; 看了看参考答案，主要思路是左右围起来并且求水平面高度： class Solution { public: int trap(vector\u003cint\u003e\u0026 height) { int ans = 0, l = 0, r = height.size() - 1, level = 0; while (l \u003c r) { int lower = (height[l] \u003e height[r] ? height[r--] : height[l++]); level = max(lower, level); ans += level - lower; } return ans; } }; 这道题解法应该挺多的。 ","date":"2022-02-18","objectID":"/zh-cn/leetcode-42/:0:0","tags":["算法","C++","LeetCode"],"title":"LeetCode 42","uri":"/zh-cn/leetcode-42/"},{"categories":["日记"],"content":"前几天去平遥古城转了转，整个古城基本上保存了明清时期的原貌。站在城墙上眺望，非常壮观。小吃很多，我最喜欢平遥牛肉和碗托！ 没有拍到好看的照片，这里就放两张我在南城墙上拍到的。 南城门 红衣大炮 ","date":"2022-02-13","objectID":"/zh-cn/pingyao-ancient-city/:0:0","tags":["转悠"],"title":"平遥古城","uri":"/zh-cn/pingyao-ancient-city/"},{"categories":["笔记"],"content":"一个双向链表的C++模版。 #include \u003ciostream\u003e using namespace std; struct ListNode { int val; ListNode *next, *prior; ListNode() : val(0), next(nullptr), prior(nullptr) {} ListNode(int v) : val(v), next(nullptr), prior(nullptr) {} ListNode(int v, ListNode *next, ListNode *prior) : val(v), next(next), prior(prior) {} }; ListNode *insert(ListNode *p, int val) { ListNode *n = new ListNode; n-\u003eval = val; n-\u003enext = p-\u003enext; p-\u003enext = n; n-\u003eprior = p; if (n-\u003enext != nullptr) n-\u003enext-\u003eprior = n; return n; } void erase(ListNode *p) { p-\u003eprior-\u003enext = p-\u003enext; if (p-\u003enext != nullptr) p-\u003enext-\u003eprior = p-\u003eprior; delete p; } void print(ListNode *p) { if (p != nullptr) { cout \u003c\u003c p-\u003eval; p = p-\u003enext; } while (p != nullptr) { cout \u003c\u003c \" -\u003e \" \u003c\u003c p-\u003eval; p = p-\u003enext; } cout \u003c\u003c endl; } int main() { ListNode *front = new ListNode(1); ListNode *n = insert(insert(insert(front, 2), 4)-\u003eprior, 3); print(front); // 1 -\u003e 2 -\u003e 3 -\u003e 4 erase(n); print(front); // 1 -\u003e 2 -\u003e 4 return 0; } LeetCode 21. Merge Two Sorted Lists class Solution { public: ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) { if (list1 == nullptr \u0026\u0026 list2 == nullptr) return nullptr; else if (list1 == nullptr) return list2; else if (list2 == nullptr) return list1; else { ListNode *front, *p, *p1, *p2; if (list1-\u003eval \u003c= list2-\u003eval) { front = list1; p1 = list1-\u003enext; p2 = list2; } else { front = list2; p1 = list1; p2 = list2-\u003enext; } p = front; while (p1 != nullptr \u0026\u0026 p2 != nullptr) { if (p1-\u003eval \u003c= p2-\u003eval) { p-\u003enext = p1; p1 = p1-\u003enext; } else { p-\u003enext = p2; p2 = p2-\u003enext; } p = p-\u003enext; } if (p1 == nullptr) p-\u003enext = p2; else p-\u003enext = p1; return front; } } }; LeetCode 23. Merge k Sorted Lists 直接用这个方法导致Time Limit Exceeded， class Solution { public: ListNode *mergeKLists(vector\u003cListNode *\u003e \u0026lists) { int flag = 0, min = 0x3f3f3f; ListNode *front, *p, *p1; unordered_map\u003cListNode *, ListNode *\u003e ptr; vector\u003cListNode *\u003e ps; for (auto list : lists) { if (list != nullptr) { flag = 1; ptr[list] = list; if (list-\u003eval \u003c min) { min = list-\u003eval; front = list; } } } if (!lists.size() || !flag) return nullptr; else { ptr[front] = ptr[front]-\u003enext; p = front; while (true) { flag = 0, min = 0x3f3f3f; for (auto list : lists) { if (ptr[list] != nullptr) { flag = 1; if (ptr[list]-\u003eval \u003c min) { min = ptr[list]-\u003eval; p1 = list; } } } if (!flag) break; p-\u003enext = ptr[p1]; p = p-\u003enext; ptr[p1] = ptr[p1]-\u003enext; } return front; } } }; 用优先队列就可以通过了。 class Solution { public: ListNode *mergeKLists(vector\u003cListNode *\u003e \u0026lists) { ListNode *front, *p; auto cmp = [](ListNode *a, ListNode *b) { return a-\u003eval \u003e= b-\u003eval; }; // ptr.top() is minimal. priority_queue\u003cListNode *, vector\u003cListNode *\u003e, decltype(cmp)\u003e ptr(cmp); for (auto list : lists) { if (list != nullptr) ptr.push(list); } if (!lists.size() || ptr.empty()) return nullptr; else { front = ptr.top(); ptr.pop(); if (front-\u003enext != nullptr) ptr.push(front-\u003enext); p = front; while (!ptr.empty()) { p-\u003enext = ptr.top(); ptr.pop(); p = p-\u003enext; if (p-\u003enext != nullptr) ptr.push(p-\u003enext); } return front; } } }; ","date":"2022-01-31","objectID":"/zh-cn/linked-list/:0:0","tags":["链表","优先队列","数据结构","C++","LeetCode"],"title":"链表","uri":"/zh-cn/linked-list/"},{"categories":["笔记"],"content":"这是二分查找算法的一个C++模版，以及C++标准模版库\u003calgorithm\u003e头文件中二分查找函数std::lower_bound和std::upper_bound的简单应用。 #include \u003calgorithm\u003e #include \u003ciostream\u003e using namespace std; int nums[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; int binary_search(int left, int right, int key) { int pos = -1, mid; while (left \u003c= right) { mid = left + (right - left) / 2; if (key \u003e nums[mid]) left = mid + 1; else if (key \u003c nums[mid]) right = mid - 1; else { pos = mid; break; } } return pos; } int main() { cout \u003c\u003c binary_search(0, 9, 3) \u003c\u003c endl; // 2 cout \u003c\u003c lower_bound(nums, nums + 10, 3) - nums \u003c\u003c endl; // 2, \u003e= 3 cout \u003c\u003c upper_bound(nums, nums + 10, 3) - nums \u003c\u003c endl; // 3, \u003e 3 return 0; } 用这个模版做了一道LeetCode的34. Find First and Last Position of Element in Sorted Array。 class Solution { public: vector\u003cint\u003e searchRange(vector\u003cint\u003e\u0026 nums, int target) { if (!nums.size()) return vector\u003cint\u003e{-1, -1}; else { int pos = binary_search(nums, 0, nums.size() - 1, target); if (pos == -1) return vector\u003cint\u003e{-1, -1}; else { int left = pos - 1, right = pos + 1, size = nums.size(); while (left \u003e= 0 \u0026\u0026 nums[left] == target) --left; while (right \u003c size \u0026\u0026 nums[right] == target) ++right; return vector\u003cint\u003e{left + 1, right - 1}; } } } int binary_search(vector\u003cint\u003e nums, int left, int right, int key) { int pos = -1, mid; while (left \u003c= right) { mid = left + (right - left) / 2; if (key \u003e nums[mid]) left = mid + 1; else if (key \u003c nums[mid]) right = mid - 1; else { pos = mid; break; } } return pos; } }; ","date":"2022-01-29","objectID":"/zh-cn/binary-search/:0:0","tags":["查找","算法","C++","LeetCode"],"title":"二分查找","uri":"/zh-cn/binary-search/"},{"categories":["日记"],"content":"真好吃！ ","date":"2022-01-18","objectID":"/zh-cn/made-a-cake/:0:0","tags":["蛋糕"],"title":"做了个蛋糕🍰","uri":"/zh-cn/made-a-cake/"},{"categories":["日记"],"content":"今天出来走了走，拍了一些照片。蓝蓝的天，感觉真不错！ 天安门城楼 人民英雄纪念碑（北面） 人民英雄纪念碑（南面） 毛主席纪念堂 人民大会堂 新华门 ","date":"2021-12-27","objectID":"/zh-cn/i-went-to-tiananmen-today/:0:0","tags":["转悠"],"title":"今天到天安门走了走","uri":"/zh-cn/i-went-to-tiananmen-today/"},{"categories":["笔记"],"content":"目前本站已经成型，进入日常维护阶段，现在来回顾一下它是如何建立的。网上已经有各种教程，而本文主要是我自己的经历，不会涉及那些重复的细节。 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:0:0","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"开始 上上周看到有人用Github作免费网盘，我以前还见过有人专门建了repository来记笔记、写博客，我忽然也想有个写点东西记录自己的地方。我就查了一下如何用Github写博客，我才知道了Github Pages。简单来说它可以免费自动托管静态网页，用它做一个自己的博客是绰绰有余的。 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:1:0","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"准备 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:2:0","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"域名 Github Pages是免费的，不过它的网址都长username.github.io这样，感觉不够个性化。好在它是支持自定义域名的，我决定买一个。网站还没有建起来，但我还是先买了。我听说国内买域名需要实名审核，并且审核需要好几天。我一边等待审核通过，一边建网站，这样更省时间。最后我买了kayak4665664.com。 技巧 有的域名首年注册时看起来便宜，但以后续费比.com域名还要贵。 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:2:1","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"username.github.io 新建了一个repository，进行Pages设置。Github Pages使用Jekyll将纯文本转化为静态网站，所以在设置过程中它会让你选择你的Jekyll主题。我还认真地比较了一下那几个主题，选了我觉得最好看的一个。其实后面很快我就发现，这些主题过于简单，不满足我的需求。之后用git克隆repository到了本地。 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:2:2","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"设计 我看了一些其他人的网站，初步确定我的网站要有评论、访问统计、站内搜索这几个功能。另外还要加入百度和谷歌分析，并且让它们收录我的网站。 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:2:3","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"工具 除了Jekyll，还有很多将纯文本转化为静态网站和博客的工具，比如我现在用的Hugo。由于Github Pages默认使用Jekyll，我就选择了Jekyll。 Jekyll基于Ruby，可以用gem来安装。我使用的macOS自带一个Ruby，我就直接执行gem install jekyll bundler开始安装Jekyll、Bundler以及它们的依赖。安装一半，出现fatal error: 'ruby/config.h' file not found。谷歌了一下有人说是自带的Ruby版本太低，还有人说是Xcode CommandLineTools的问题。我直接用Homebrew安装了一个新的Ruby。安装之后设置了终端的环境变量，重新执行gem install jekyll bundler，这次安装好了。 警告 我还查了一下怎么清理之前gem install jekyll bundler时的缓存和已安装的包，结果没有找到。我只好手动卸载了那些已安装的包、删除了缓存所在的目录，感觉根本没清理干净。 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:2:4","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"Jekyll ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:3:0","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"上手 在工作目录执行bundle exec jekyll serve，出现cannot load such file -- webrick (LoadError)。谷歌了一下，用bundle add webrick解决。 在本地预览了一下感觉没有问题，准备push到Github上用手机测试。但是出现了问题，push不上去。谷歌了一下没找到，百度了一下发现可能是proxy的问题，取消git设置的代理后解决。 用手机看了一下，网页是自动适配移动端的。这时候发现这个主题太简陋了，甚至没有分页的功能。刚开始我还准备自己实现出来，但又想想那么多功能都得一个个实现，工作量巨大，我还是找一个功能比较完整的主题吧。 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:3:1","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"主题 网上有不少Jekyll主题，我最后下载了YAT。它支持不少功能，可以用Disqus和Gitment来评论。 下载之后，想要执行bundle exec jekyll serve预览一下，报错Could not find gem 'jekyll-spaceship (~\u003e 0.2)'。我通过在gem安装jekyll-spaceship时设置版本为0.2来解决。在这里我还发现安装过程卡住了，但没有报错。用Activity Monitor看到Ruby的Rcvd Bytes是一直缓慢增加的，应该是国内网络的问题。谷歌了一下，在Ruby China找到了换源的方法，换源之后成功安装。 再次执行bundle exec jekyll serve，这次可以预览新主题了。 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:3:2","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"个性化 根据自己的需求来对主题进行个性化修改，如标题、图片等。我本来想用Gitment，但我发现它不能登录Github账号，看了一下它的Issues应该是停止服务了。所以只能用Disqus，我注册了Disqus账号，开启了评论功能。此外我还用了不蒜子进行网站访问量统计，只需两行代码。 之后我开始增加一些内容。在预览内容的过程中渐渐发现了一些问题，这个主题它的字体偏小，不论在浅色还是深色模式下文字与背景的对比较低，总之我感觉读起来费眼睛。然而无法在配置文件中对字体进行设置，我只能直接去挨个修改.scss文件，比较麻烦。而它的翻译功能，调用了谷歌的网页翻译接口，在国内网络下几乎无法使用，导致网页变得卡顿，我直接将源代码中翻译相关的部分删除了。除此之外，Disqus在国内网络下无法登录账号，测试了一下只能使用访客匿名评论，这也是一个缺点。 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:3:3","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"放弃 个性化之后，我感觉没有问题了。这时忽然想到YAT主题还支持PlantUML、Mermaid、Mathjax、Vedio、Audio等，我应该再测试一下。我直接用作者的markdown文件进行测试，结果发现这些东西都没有正常显示出来。 我还以为是我把源代码改坏了，我直接克隆了一份作者的repository。经测试发现同样不行，看来不是我修改代码的问题。但是问题在哪我也一直没有找到，考虑到这个主题还存在其他的缺点，我选择放弃它。 我又开始找主题，这一次更加仔细。最后找到了LoveIt主题，也就是我现在用的。 这是一个基于Hugo的主题，所以Ruby就没用了，我把它卸载了。 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:3:4","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"Hugo ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:4:0","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"上手 先用Homebrew安装Hugo，LoveIt文档中推荐安装extended版本的Hugo，而Homebrew安装的Hugo就是extended版本的。 Hugo的目录结构和Jekyll的还是不太一样，用了一些时间才熟悉了。LoveIt的配置项非常多，也是需要先看一看文档的。 大概配置了一下，执行hugo serve -e production --disableFastRender进行预览。 ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:4:1","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"个性化 之后就是个性化地设置，还有： 注册LeanCloud以及Valine用于评论和访问统计 利用https://realfavicongenerator.net生成网站图标 注册Gravartar头像 注册Algolia用于站内搜索 使用node.js执行npm install atomic-algolia安装atomic-algolia，用于自动化上传索引文件至Algolia 注册Mapbox 在这中间我还发现一个问题，本地预览的时候不能显示自定义的404模版，谷歌了一下发现： 信息 hugo server will not automatically load your custom 404.html file, but you can test the appearance of your custom “not found” page by navigating your browser to /404.html. ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:4:2","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"扩展 网站差不多建起来了。执行hugo，就会出现/public目录，把/public和自己的repository同步，就可以把网页托管到Github Pages。之后再用atomic-algolia上传生成的索引文件至Algolia。经过这两个步骤就完成了一次网站的部署。 另外，我又建了一个私有的repository，用于同步/public之外的源代码，所以每次部署都需要多同步一次。为了自动化这三个过程，我写了一个Shell脚本，一步到位。 这时候，我的域名终于通过了实名审核。我开始进行一些扩展： 在Github上设置CNAME 将repository导入Vercel，这样每次更新repository，都会自动部署到Vercel。据说百度不会收录Github Pages托管的网站，而部署到Vercel之后可以被收录 在Vercel中设置自定义域名 加入百度统计和谷歌Analytics 向百度搜索资源平台和谷歌Search Console提交sitemap，在必应Webmaster Tools中直接导入谷歌Search Console中已经提交的sitemap ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:4:3","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["笔记"],"content":"最后 未来我还打算加入一点谷歌广告，这也是大部分网站都有的功能。 总的来说，这次的收获还是很多的！ ","date":"2021-12-22","objectID":"/zh-cn/how-my-wesite-was-built/:5:0","tags":["我的网站","Github Pages","Jekyll","Hugo"],"title":"我的网站是如何建立的？","uri":"/zh-cn/how-my-wesite-was-built/"},{"categories":["日记"],"content":"谷歌收录了我的网站！目前我也向百度和必应提交了sitemap，坐等收录。 现在我的网站已经逐渐走上了正轨，所以我准备下周写一篇文章来回顾一下我的网站是如何建立的。 ","date":"2021-12-19","objectID":"/zh-cn/google-has-indexed-my-website/:0:0","tags":["我的网站"],"title":"谷歌收录了我的网站","uri":"/zh-cn/google-has-indexed-my-website/"},{"categories":["日记"],"content":"这周学校开始了毕设工作，现在我已经确定了题目，正式开始了我的毕业设计。 ","date":"2021-12-18","objectID":"/zh-cn/graduation-project-starts-now/:0:0","tags":["毕业设计","NCUT"],"title":"现在开始毕设了","uri":"/zh-cn/graduation-project-starts-now/"},{"categories":["日记"],"content":"选题 题目之前已经有了，我的研究生导师给我定的一个网安方向的题目。我觉得这个题目还挺合适的，一方面可以提前学习一些网安的知识，另一方面也完成了我的毕设，算是一箭双雕。 ","date":"2021-12-18","objectID":"/zh-cn/graduation-project-starts-now/:1:0","tags":["毕业设计","NCUT"],"title":"现在开始毕设了","uri":"/zh-cn/graduation-project-starts-now/"},{"categories":["日记"],"content":"开会 开完毕设动员会之后，和我的指导老师见了面。他给我们几个开了个小会，讲了一堆东西。其实也没什么，主要就是建了一个企业微信群，我的指导老师成了“寨主”。 ","date":"2021-12-18","objectID":"/zh-cn/graduation-project-starts-now/:2:0","tags":["毕业设计","NCUT"],"title":"现在开始毕设了","uri":"/zh-cn/graduation-project-starts-now/"},{"categories":["日记"],"content":"上报 虽说题目已经有了，但我还是得好好考虑一下，毕竟毕设不是那么随便的。我的指导老师在群里也发了一些参考的题目，都是比较经典的。而那个题目对我来说还是很新颖的，我之前从没做过这个方向。综合来看，我还是更偏向这个网安的题目，而且我的研究生导师也非常希望我去做这个题目。所以我向我的指导老师上报了。 ","date":"2021-12-18","objectID":"/zh-cn/graduation-project-starts-now/:3:0","tags":["毕业设计","NCUT"],"title":"现在开始毕设了","uri":"/zh-cn/graduation-project-starts-now/"},{"categories":["日记"],"content":"讨论 指导老师如是说： 题目写的不完整， 写一个完整的。 好的，我把我的题目描述得更加完整，等着听老师的意见。消息已读了，但是一直没有回复。真的是莫名其妙啊，不会是他忘记了吧？第二天我发消息再问问他的意见，突然收到了一条59秒的语音。 指导老师如是说： …你那根本不叫题目，你那叫口语，那哪是题目？而且你这个所做的东西吗，说心里话这个搜索性太大了，没看到具体内容我都不好说…那么你这个所做的吧，可大可小。这个对你的要求，我不知道…那么小吗，就是非常简单的就不是太难；如果是要大吗，那是有一定难度的好不好？那么你写那么多，你那哪是一个题目？你那是口语！你口语叫我怎么给你定？你要定下来，难道叫我给你定个口语能做题目吗？你自己都写不出来一个题目叫我来定？给你定一个口语这合适吗？好吧？你自己想好了以后完了再讨论还有基础，否则话没话可说！ 我直接就懵了，他说我的不叫题目。先不论到底是不是题目，他觉得我的不算题目，他有意见、有问题，他可以直接告诉我的吧？我可以去修改和完善啊，一直不回复我能知道他是怎么想的吗？ 我长这么大第一次遇见这种情况，我不知道这对我来说意味着什么。我把这个事情也告诉了我的研究生导师。 她回复的第一句话是： 为啥？ 我也把我指导老师的语音给她看，她帮我确定了一个标题。这里我忽然发现可能有一个误解，我指导老师说的“题目”到底是指“标题”还是“课题”？我查阅了《现代汉语规范词典》，“题目”确实是有多个意思的。看他说我的“题目”是“口语”，看起来他说的题目指的是“标题”了。 如果是这样的话，他为啥一开始不说清楚他说的是一个标题呢？ 好吧，他说我自己都写不出来一个题目，没有讨论的基础。那我就把定好的题目发给了他，希望能有进一步的讨论。但是，他还是一直没话可说。 这时我感觉，什么“标题”还是“课题”可能并不是关键。我想到他在群里说“从这一届开始，教务处准备启用毕业设计管理系统”，“都通过系统进行”，“留有痕迹”。“再者”，“进行工程教育认证”，“各位指导老师严把题目质量关”。我感觉到他应该是对这个题目的专业水平和工作量不太好把关。毕竟他不是研究网安的，往届应该也没有类似的题目，他一直不好下结论，所以一直没话可说。 我把我的想法告诉了我的研究生导师，她建议我给他讲得再详细一些。因此，我写了一个有点像开题报告的文档，写清楚了具体的要做的每一项任务，也初步计划了每一项任务的时间分配。我发给了我的指导老师，并且向他提出如果有问题希望他可以直接说出他的意见。 终于，我的指导老师开始和我讨论了。 指导老师如是说： 你提交吧。 ","date":"2021-12-18","objectID":"/zh-cn/graduation-project-starts-now/:4:0","tags":["毕业设计","NCUT"],"title":"现在开始毕设了","uri":"/zh-cn/graduation-project-starts-now/"},{"categories":["日记"],"content":"最后 不管怎样，题目定下来了，现在开始做毕设了。 ","date":"2021-12-18","objectID":"/zh-cn/graduation-project-starts-now/:5:0","tags":["毕业设计","NCUT"],"title":"现在开始毕设了","uri":"/zh-cn/graduation-project-starts-now/"},{"categories":null,"content":"kayak4665664 嘿，很高兴认识你，你找到了我的博客！ 我是kayak4665664，中国科学院大学学生。 ","date":"2021-12-13","objectID":"/zh-cn/about/:1:0","tags":null,"title":"关于","uri":"/zh-cn/about/"},{"categories":null,"content":"帮助 ","date":"2021-12-13","objectID":"/zh-cn/about/:2:0","tags":null,"title":"关于","uri":"/zh-cn/about/"},{"categories":null,"content":"1. 如何订阅博客？ 首先你需要安装RSS阅读器，然后点击，将RSS链接导入到你的阅读器中。 如果你不想安装RSS阅读器，也可以： 添加书签 添加到主屏幕 ","date":"2021-12-13","objectID":"/zh-cn/about/:2:1","tags":null,"title":"关于","uri":"/zh-cn/about/"},{"categories":null,"content":"2. 如何在本站评论？ 输入评论，点击提交即可。你还可以输入你的昵称、邮箱和网址。如果你输入了Gravtar邮箱，你的头像可以显示出来。 ","date":"2021-12-13","objectID":"/zh-cn/about/:2:2","tags":null,"title":"关于","uri":"/zh-cn/about/"},{"categories":null,"content":"许可协议 本站所有内容采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可。 ","date":"2021-12-13","objectID":"/zh-cn/about/:3:0","tags":null,"title":"关于","uri":"/zh-cn/about/"},{"categories":null,"content":"您可以自由地： 共享 — 在任何媒介以任何形式复制、发行本作品 演绎 — 修改、转换或以本作品为基础进行创作 只要你遵守许可协议条款，许可人就无法收回你的这些权利。 ","date":"2021-12-13","objectID":"/zh-cn/about/:3:1","tags":null,"title":"关于","uri":"/zh-cn/about/"},{"categories":null,"content":"惟须遵守下列条件： 署名 — 您必须给出适当的署名，提供指向本许可协议的链接，同时标明是否（对原始作品）作了修改。您可以用任何合理的方式来署名，但是不得以任何方式暗示许可人为您或您的使用背书。 非商业性使用 — 您不得将本作品用于商业目的。 相同方式共享 — 如果您再混合、转换或者基于本作品进行创作，您必须基于与原先许可协议相同的许可协议分发您贡献的作品。 没有附加限制 — 您不得适用法律术语或者技术措施从而限制其他人做许可协议允许的事情。 ","date":"2021-12-13","objectID":"/zh-cn/about/:3:2","tags":null,"title":"关于","uri":"/zh-cn/about/"},{"categories":null,"content":"声明： 您不必因为公共领域的作品要素而遵守许可协议，或者您的使用被可适用的例外或限制所允许。 不提供担保。许可协议可能不会给与您意图使用的所必须的所有许可。例如，其他权利比如形象权、隐私权或人格权可能限制您如何使用作品。 ","date":"2021-12-13","objectID":"/zh-cn/about/:3:3","tags":null,"title":"关于","uri":"/zh-cn/about/"},{"categories":["日记"],"content":"世界你好！ ","date":"2021-12-12","objectID":"/zh-cn/hello-world/:1:0","tags":[],"title":"世界你好！","uri":"/zh-cn/hello-world/"}]