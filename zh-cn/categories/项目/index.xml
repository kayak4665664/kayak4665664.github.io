<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>项目 - 分类 | kayak4665664</title>
    <link>https://www.kayak4665664.com/zh-cn/categories/%E9%A1%B9%E7%9B%AE/</link>
    <description>项目 - 分类 | kayak4665664</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>contact@kayak4665664.com (kayak4665664)</managingEditor>
      <webMaster>contact@kayak4665664.com (kayak4665664)</webMaster><copyright>kayak4665664 | CC BY-NC-SA 4.0</copyright><lastBuildDate>Thu, 04 Jan 2024 21:51:25 &#43;0800</lastBuildDate><atom:link href="https://www.kayak4665664.com/zh-cn/categories/%E9%A1%B9%E7%9B%AE/" rel="self" type="application/rss+xml" /><item>
  <title>Node-Depend-View</title>
  <link>https://www.kayak4665664.com/zh-cn/node-depend-view/</link>
  <pubDate>Thu, 04 Jan 2024 21:51:25 &#43;0800</pubDate>
  <author>kayak4665664</author>
  <guid>https://www.kayak4665664.com/zh-cn/node-depend-view/</guid>
  <description><![CDATA[<a href="https://github.com/kayak4665664/Node-Depend-View" title="Node-Depend-View - kayak4665664"target="_blank" rel="external nofollow noopener noreferrer" class="card-link"><span class="cl-backdrop" style="--cl-bg-url: url(/images/fixit.min.svg);"></span>
    <span class="cl-content">
      <span class="cl-text">
        <span class="cl-title">Node-Depend-View</span>
        <span class="cl-meta">
          <svg class="cl-icon-link" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zM832.6 191.4c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1z" fill="#a9a9b3"></path><path d="M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z" fill="#a9a9b3"></path></svg>
          <span class="cl-url">https://github.com/kayak4665664/Node-Depend-View</span>
        </span>
      </span><img src="/images/remote/favicons_10588377690699735476.png" alt="card icon" class="cl-icon-shortcut"></span></a>
<p>我在学习前端和Node.js开发的过程中完成了这个小项目，它可以将一个项目的依赖关系以图形的形式展示出来，我还将它发布到了npm上，具体还请看上面的链接。感觉用TypeScript做全栈开发还是很有意思的，希望在新的一年里可以先找到一份实习工作！好了，不多说了，加油！💪</p>]]></description>
</item>
<item>
  <title>Devtools-Font</title>
  <link>https://www.kayak4665664.com/zh-cn/devtools-font/</link>
  <pubDate>Sat, 26 Aug 2023 16:56:01 &#43;0800</pubDate>
  <author>kayak4665664</author>
  <guid>https://www.kayak4665664.com/zh-cn/devtools-font/</guid>
  <description><![CDATA[<p>前天忽然发现Chrome Devtools里的字体家族不能直接修改，查了一下发现可以写一个扩展来解决这个问题。</p>
<a href="https://github.com/kayak4665664/Devtools-Font" title="Devtools-Font - kayak4665664"target="_blank" rel="external nofollow noopener noreferrer" class="card-link"><span class="cl-backdrop" style="--cl-bg-url: url(/images/fixit.min.svg);"></span>
    <span class="cl-content">
      <span class="cl-text">
        <span class="cl-title">Devtools-Font</span>
        <span class="cl-meta">
          <svg class="cl-icon-link" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zM832.6 191.4c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1z" fill="#a9a9b3"></path><path d="M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z" fill="#a9a9b3"></path></svg>
          <span class="cl-url">https://github.com/kayak4665664/Devtools-Font</span>
        </span>
      </span><img src="/images/remote/favicons_10588377690699735476.png" alt="card icon" class="cl-icon-shortcut"></span></a>
<p>我主要参考了<a href="https://gist.github.com/vbsessa/e337d0add70a71861b8c580d5e16996e"target="_blank" rel="external nofollow noopener noreferrer">https://gist.github.com/vbsessa/e337d0add70a71861b8c580d5e16996e<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>，但是按照这个教程“Sources”中的字体没有变化，我在这个基础上做了一些修改。最后我把字体改成了<code>FiraCode Nerd Font</code>，不得不说这个字体真的好看，还有连笔效果。</p>]]></description>
</item>
<item>
  <title>Springboot-Demo</title>
  <link>https://www.kayak4665664.com/zh-cn/springboot-demo/</link>
  <pubDate>Sun, 11 Jun 2023 16:55:17 &#43;0800</pubDate>
  <author>kayak4665664</author>
  <guid>https://www.kayak4665664.com/zh-cn/springboot-demo/</guid>
  <description><![CDATA[<p>这个学期我选了一门Java编程课，最后要完成一个项目，就是<strong>Springboot-Demo</strong>。</p>
<a href="https://github.com/kayak4665664/Springboot-Demo" title="Springboot-Demo - kayak4665664"target="_blank" rel="external nofollow noopener noreferrer" class="card-link"><span class="cl-backdrop" style="--cl-bg-url: url(/images/fixit.min.svg);"></span>
    <span class="cl-content">
      <span class="cl-text">
        <span class="cl-title">Springboot-Demo</span>
        <span class="cl-meta">
          <svg class="cl-icon-link" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zM832.6 191.4c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1z" fill="#a9a9b3"></path><path d="M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z" fill="#a9a9b3"></path></svg>
          <span class="cl-url">https://github.com/kayak4665664/Springboot-Demo</span>
        </span>
      </span><img src="/images/remote/favicons_10588377690699735476.png" alt="card icon" class="cl-icon-shortcut"></span></a>
<p>这个程序的功能就是从<code>json</code>文件中读取数据，再显示到页面上。除了<code>Springboot</code>框架，前端还是我常用的<code>Layui</code>和<code>Highcharts</code>。</p>
<p>我选这门Java课主要就是想练习一下Java的Web开发。我记得我大三的时候有一门软件工程实践课，有一个实验就是要做一个Web应用。当时我第一次接触Web开发，本来想用Java和<code>Springboot</code>来完成，我在网上找了教程，感觉有点看不明白。然后我又了解了一下python的<code>Django</code>框架，发现比较容易理解，最后我就用<code>Django</code>做了那个实验。这次我用<code>Springboot</code>，感觉和<code>Django</code>其实也差不多。</p>]]></description>
</item>
<item>
  <title>Pcap-Parser</title>
  <link>https://www.kayak4665664.com/zh-cn/pcap-parser/</link>
  <pubDate>Tue, 11 Apr 2023 12:59:07 &#43;0800</pubDate>
  <author>kayak4665664</author>
  <guid>https://www.kayak4665664.com/zh-cn/pcap-parser/</guid>
  <description><![CDATA[<p><a href="https://www.kayak4665664.com/zh-cn/capture-packets-for-mobile-apps/"target="_blank" rel="external nofollow noopener noreferrer">上一篇文章<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>介绍了如何抓包，这篇文章介绍编写程序解析抓包文件。</p>
<div class="details admonition info open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-info-circle fa-fw" aria-hidden="true"></i>信息<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content">本文涉及的源代码在GitHub仓库：</div>
    </div>
  </div>
<a href="https://github.com/kayak4665664/Pcap-Parser" title="Pcap Parser - kayak4665664"target="_blank" rel="external nofollow noopener noreferrer" class="card-link"><span class="cl-backdrop" style="--cl-bg-url: url(/images/fixit.min.svg);"></span>
    <span class="cl-content">
      <span class="cl-text">
        <span class="cl-title">Pcap-Parser</span>
        <span class="cl-meta">
          <svg class="cl-icon-link" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M574 665.4c-3.1-3.1-8.2-3.1-11.3 0L446.5 781.6c-53.8 53.8-144.6 59.5-204 0-59.5-59.5-53.8-150.2 0-204l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3l-39.8-39.8c-3.1-3.1-8.2-3.1-11.3 0L191.4 526.5c-84.6 84.6-84.6 221.5 0 306s221.5 84.6 306 0l116.2-116.2c3.1-3.1 3.1-8.2 0-11.3L574 665.4zM832.6 191.4c-84.6-84.6-221.5-84.6-306 0L410.3 307.6c-3.1 3.1-3.1 8.2 0 11.3l39.7 39.7c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c53.8-53.8 144.6-59.5 204 0 59.5 59.5 53.8 150.2 0 204L665.3 562.6c-3.1 3.1-3.1 8.2 0 11.3l39.8 39.8c3.1 3.1 8.2 3.1 11.3 0l116.2-116.2c84.5-84.6 84.5-221.5 0-306.1z" fill="#a9a9b3"></path><path d="M610.1 372.3c-3.1-3.1-8.2-3.1-11.3 0L372.3 598.7c-3.1 3.1-3.1 8.2 0 11.3l39.6 39.6c3.1 3.1 8.2 3.1 11.3 0l226.4-226.4c3.1-3.1 3.1-8.2 0-11.3l-39.5-39.6z" fill="#a9a9b3"></path></svg>
          <span class="cl-url">https://github.com/kayak4665664/Pcap-Parser</span>
        </span>
      </span><img src="/images/remote/favicons_10588377690699735476.png" alt="card icon" class="cl-icon-shortcut"></span></a>
<p>Pcap文件中包含了网络数据包的信息，包括源IP地址、目的IP地址、源端口、目的端口、传输层协议、应用层协议等。因此，程序的思路就是从数据链路层开始解析，直到应用层，解析出每一层的协议类型和协议数据。在实现上可以参考Wireshark的解析结果。</p>
<p>对于<code>C/C++</code>，可以使用<code>&lt;pcap.h&gt;</code>处理Pcap文件。之后，使用<code>&lt;net/ethernet.h&gt;</code>、<code>&lt;netinet/ip.h&gt;</code>、<code>&lt;netinet/tcp.h&gt;</code>定义的以太网头部、IP头部、TCP头部结构体解析数据链路层、网络层、传输层。另外，IP头部和TCP头部都有<code>options</code>，这个字段结构体中没有。</p>
<p>应用层的协议种类比较多，需要针对每一种协议编写程序。<a href="https://github.com/kayak4665664/Pcap-Parser"target="_blank" rel="external nofollow noopener noreferrer">我的程序<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>支持解析<code>HTTP</code>和<code>TLS</code>协议。</p>
<p><code>HTTP</code>是明文协议，数据字段之间是用<code>\r\n</code>分隔的，另外需要考虑一个<code>HTTP</code>消息分成了好多个packet，对相关packet重组之后才能解析出正确的结果。而<code>TLS</code>是加密协议，比较复杂，要按照协议的结构进行解析，也要考虑重组的情况。</p>
<p>以上只是一些简单的思路，实际上还有许多复杂的情况没有覆盖。</p>]]></description>
</item>
<item>
  <title>NCUT-Pot</title>
  <link>https://www.kayak4665664.com/zh-cn/ncut-pot/</link>
  <pubDate>Thu, 14 Jul 2022 13:08:07 &#43;0800</pubDate>
  <author>kayak4665664</author>
  <guid>https://www.kayak4665664.com/zh-cn/ncut-pot/</guid>
  <description><![CDATA[<p><strong>NCUT-Pot</strong>是我的毕业设计，是一个蜜罐。</p>
<p>这个蜜罐支持<code>Telnet</code>和<code>SSH</code>两种协议，模拟<code>Linux</code>系统，将黑客的数据存储在<code>SQL</code>数据库中。此外，它还通过短信和电子邮件向用户发送警报。用户可以自定义蜜罐的命令和目录。</p>
<div class="details admonition info open">
    <div class="details-summary admonition-title">
      <i class="icon fa-solid fa-info-circle fa-fw" aria-hidden="true"></i>信息<i class="details-icon fa-solid fa-angle-right fa-fw" aria-hidden="true"></i>
    </div>
    <div class="details-content">
      <div class="admonition-content">关于<strong>NCUT-Pot</strong>的更多细节请访问<a href="https://github.com/kayak4665664/FF-Pot"target="_blank" rel="external nofollow noopener noreferrer">https://github.com/kayak4665664/FF-Pot<i class="fa-solid fa-external-link-alt fa-fw fa-xs ms-1 text-secondary" aria-hidden="true"></i></a>（现已改名为FF-Pot）。</div>
    </div>
  </div>]]></description>
</item>
</channel>
</rss>
